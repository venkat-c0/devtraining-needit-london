<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri>/api/x_58872_needit/needit_api/nigetinfo/{user_name}</default_operation_uri>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	
		
	// Get the queryParameter
	var queryParameter = request.queryParams;
	var ni_query = queryParameter.ni_query;
	
	// implement resource here
	var pathParameters = request.pathParams;
	var requesteFor = pathParameters.user_name;
	
	// get user name and sys_id
	var userInfo = new GlideRecord('sys_user');
	userInfo.get('user_name',requesteFor);
	
	// Get the count of active NeedIt table records where the user from the
	// user_name path parameter is the Requested for. The encoded query is from the
	// Query parameter Associations. Group by category.
	
	var userNICount = new GlideAggregate('x_58872_needit_needit');
	userNICount.addAggregate('COUNT');
	userNICount.addEncodedQuery(ni_query);
	userNICount.addQuery('u_requested_for',userInfo.sys_id);
	userNICount.groupBy('u_request_type');
	userNICount.query();
	
	var needItRecordsCount = 0;
	var totalNeedItRecordCount = 0;
	var needItRec = [];
	
	while(userNICount.next()){
		needItRecordsCount = userNICount.getAggregate('COUNT');
		var reqType = userNICount.u_request_type.getDisplayValue();
		needItRec.push({"requestType":reqType,"count":needItRecordsCount});
		totalNeedItRecordCount = parseInt(totalNeedItRecordCount) + parseInt(needItRecordsCount);
		
	}
	
	// create a body and add property value pairs to the body
	
	var body = {};
	body.totalUserNIRecords = totalNeedItRecordCount;
	body.requestTypeCounts = needItRec;
	body.user = {
		"user_name" : userInfo.user_name,
		"user_id":userInfo.sys_id
	};
	
	// set the body to the response object, which is returned to the user
	
	response.setBody(body);
	
	
	
	

})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v1/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find the NeedIt active NeedIt records for a user. Group by what needed.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-08-23 11:49:07</sys_created_on>
        <sys_id>2b9b9fff3753b300dc407e5004990e88</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>ni_getinfo</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_2b9b9fff3753b300dc407e5004990e88</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-08-26 09:58:43</sys_updated_on>
        <web_service_definition display_value="NeedIt API">faa2727b3713b300dc407e5004990ee5</web_service_definition>
        <web_service_version display_value="v1">565f16bc37a33700dc407e5004990ed8</web_service_version>
    </sys_ws_operation>
</record_update>
